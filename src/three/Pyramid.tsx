/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh
    Cube001_1: THREE.Mesh
  }
  materials: {
    Brick: THREE.MeshStandardMaterial
    Sand: THREE.MeshStandardMaterial
  }
}

export function Pyramid(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/pyramid.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={31.515}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={materials.Brick}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001_1.geometry}
          material={materials.Sand}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/pyramid.glb')

